name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret-key-for-ci-testing-only
    
    - name: Test server startup
      run: |
        npm start &
        sleep 5
        curl --fail http://localhost:4000/health || exit 1
        pkill -f "node dist/server.js"
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret-key-for-ci-testing-only
        PORT: 4000

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run npm audit
      run: npm audit --audit-level=high
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t rcm-mcp-server:latest .
        docker run -d -p 4000:4000 --name test-container \
          -e NODE_ENV=test \
          -e JWT_SECRET=test-secret \
          rcm-mcp-server:latest
        sleep 5
        curl --fail http://localhost:4000/health
        docker stop test-container
